def solution(m, n, puddles):
    # m x n 크기의 격자를 생성하고 모든 값을 0으로 초기화합니다.
    road = [[0]*m for _ in range(n)]
    # 시작 위치의 값을 1로 설정합니다.
    road[0][0] = 1

    # 격자의 모든 위치를 순회합니다.
    for i in range(n):
        for j in range(m):
            # 현재 위치가 웅덩이인 경우, 값을 0으로 설정하고 다음 위치로 이동합니다.
            if [j+1, i+1] in puddles:
                road[i][j] = 0
                continue
            # 현재 위치가 첫 번째 행이 아닌 경우, 위쪽 위치의 경로 수를 더합니다.
            if i != 0:
                road[i][j] += road[i-1][j]
            # 현재 위치가 첫 번째 열이 아닌 경우, 왼쪽 위치의 경로 수를 더합니다.
            if j != 0:
                road[i][j] += road[i][j-1]
            # 결과를 1,000,000,007로 나눈 나머지를 저장합니다.
            road[i][j] %= 1000000007

    # 마지막 위치의 값, 즉 집에서 학교까지 가는 경로의 수를 반환합니다.
    return road[n-1][m-1]
