def solution(numbers):
    # 다음 큰 숫자를 찾는 함수
    def next_num(num_list):
        for idx in range(len(num_list)-1, 1, -1):  # 뒤에서부터 확인
            if num_list[idx] == '0':  # '0'을 찾으면
                num_list[idx] = '1'  # '0'을 '1'로 변경
                if idx != len(num_list) - 1:  # 변경된 위치가 맨 뒤가 아니라면
                    num_list[idx + 1] = '0'  # 그 다음 위치의 비트를 '0'으로 변경
                return int(''.join(num_list), 2)  # 변경된 이진수를 십진수로 변환하여 반환
        # '0'을 찾지 못한 경우 (즉, 모든 비트가 '1'인 경우)
        num_list[1] = '1'  # 두 번째 비트를 '1'로 변경
        num_list[2] = '0'  # 세 번째 비트를 '0'로 변경
        return int(''.join(num_list), 2)  # 변경된 이진수를 십진수로 변환하여 반환

    answer = []
    for i in numbers:
        bin_num = list('00' + bin(i)[2:])  # 주어진 숫자를 이진수로 변환하고 앞에 '00'을 추가
        answer.append(next_num(bin_num))  # 다음 큰 숫자를 찾아 answer에 추가

    return answer  # 결과 반환
