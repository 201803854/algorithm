def solution(n, s, a, b, fares):
    INF = 100000*n  # 무한대 값으로 초기화합니다. 이 값은 충분히 큰 값으로 설정합니다.
    graph = [[INF]*(n+1) for _ in range(n+1)]  # 그래프를 인접 행렬로 표현합니다.
    for x in range(n+1) :
        graph[x][x] = 0  # 자기 자신으로 가는 비용은 0으로 초기화합니다.

    for x,y,z in fares :
        graph[x][y] = z  # 각 지점 간의 비용을 그래프에 입력합니다.
        graph[y][x] = z  # 양방향 이동이 가능하기 때문에 반대 방향도 입력합니다.

    # 플로이드-와샬 알고리즘을 사용하여 모든 지점 간의 최단 거리를 구합니다.
    for k in range(1,n+1) :
        for x in range(1,n+1) :
            for y in range(1, n+1) :
                graph[x][y] = min(graph[x][y],graph[x][k] + graph[k][y])

    answer = INF
    for x in range(1,n+1):
        # 출발지 s에서 각 지점 x를 거쳐 도착지 a와 b로 가는 비용을 계산하고 최솟값을 찾습니다.
        answer = min(graph[s][x]+graph[x][a]+graph[x][b],answer)
    return answer