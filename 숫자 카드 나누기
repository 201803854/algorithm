def solution(arrayA, arrayB):
    # 최대공약수를 구하는 함수
    def gcd(x,y) :
        while x%y != 0 :
            temp = x%y
            x = y
            y = temp
        return y

    # 초기값 설정
    answer = 0 
    pivot_a = 0
    pivot_b = 0
    divide_A = float("inf")
    divide_B = float("inf")

    # arrayA의 모든 요소의 최대공약수를 구함
    if len(arrayA) == 1 :
        divide_A = arrayA[0]
    else :
        for i in range(1,len(arrayA)) :
            divide_A = min(divide_A,gcd(arrayA[i-1],arrayA[i]))

    # arrayB의 모든 요소의 최대공약수를 구함
    if len(arrayB) == 1 :
        divide_B = arrayB[0]
    else :
        for i in range(1,len(arrayB)) :
            divide_B = min(divide_B,gcd(arrayB[i-1],arrayB[i]))

    # 두 최대공약수 중 큰 값을 선택
    answer = max(divide_A,divide_B)

    # arrayB의 각 요소가 divide_A로 나누어 떨어지는지 확인
    for i in arrayB :
        if i%divide_A == 0 :
            pivot_a = 0
            break
        else : 
            pivot_a = divide_A

    # arrayA의 각 요소가 divide_B로 나누어 떨어지는지 확인
    for i in arrayA :
        if i%divide_B == 0 :
            answer = 0 
            pivot_b = 0
            break
        else : 
            pivot_b = divide_B

    # 두 pivot 중 큰 값 선택
    answer = max(pivot_a,pivot_b)
    
    return answer
