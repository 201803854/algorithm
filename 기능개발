from collections import deque
def solution(progresses, speeds):
    answer = []  # 각 배포마다 완성되는 기능의 수를 저장할 리스트
    progresses = deque(progresses)  # 각 기능의 진행 상황을 저장하는 데크
    speeds = deque(speeds)  # 각 기능의 개발 속도를 저장하는 데크
    day = 0  # 경과한 날짜를 저장하는 변수

    # 모든 기능이 완성될 때까지 반복
    while progresses :
        go = 1  # 한 번에 배포되는 기능의 수를 저장하는 변수
        first = progresses[0]  # 첫 번째 기능의 진행 상황
        speed = speeds[0]  # 첫 번째 기능의 개발 속도

        # 첫 번째 기능이 완성될 때까지 날짜를 증가시킴
        while first + day*speed < 100 :
            day += 1

        # 첫 번째 기능을 완성하고 데크에서 제거
        progresses.popleft()
        speeds.popleft()

        # 첫 번째 기능이 완성된 이후에 완성된 기능을 찾아서 데크에서 제거
        while progresses and progresses[0]+speeds[0]*day >= 100 :
            progresses.popleft()
            speeds.popleft()
            go += 1  # 한 번에 배포되는 기능의 수 증가

        # 한 번에 배포되는 기능의 수를 결과 리스트에 추가
        answer.append(go)
        
    return answer  # 결과 리스트 반환
