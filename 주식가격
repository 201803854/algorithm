def solution(prices):
    answer = [0] * len(prices)  # 결과 리스트 초기화
    stack = []  # 스택 초기화

    for i, price in enumerate(prices):
        # 스택이 비어 있지 않고, 현재 가격이 스택의 마지막 요소보다 낮은 경우
        while stack and price < prices[stack[-1]] :
            j = stack.pop()  # 스택에서 마지막 요소를 꺼냄
            answer[j] = i - j  # 가격이 떨어진 시점과의 차이를 계산
        stack.append(i)  # 현재 시점 스택에 추가

    # 스택에 남아있는 요소에 대해 처리
    while stack:
        j = stack.pop()
        answer[j] = len(prices) - 1 - j

    return answer
